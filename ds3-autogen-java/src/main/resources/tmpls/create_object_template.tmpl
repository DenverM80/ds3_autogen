<#include "copyright.tmpl"/>

package ${packageName};

import com.spectralogic.ds3client.HttpVerb;
import com.spectralogic.ds3client.models.Checksum;
import java.io.InputStream;
import java.nio.channels.SeekableByteChannel;
<#include "imports.tmpl"/>

public class ${name} extends AbstractRequest {

    // Variables
    public final static string AMZ_META_HEADER = "x-amz-meta-";

    private final SeekableByteChannel channel;
    private final InputStream stream;
    private final long size;
    <#include "variables.tmpl"/>
    private Checksum checksum = Checksum.none();

    // Constructor

    /**
     * @deprecated use {@link #${name}(${javaHelper.argTypeList(requiredArguments)}, ${javaHelper.argTypeList(optionalArguments)}, long, SeekableChannel)} instead
     */
    @Deprecated
    public ${name}(${javaHelper.constructorArgs(requiredArguments, false, true)}final long size, final SeekableByteChannel channel) {
        <#list requiredArguments as arg>
        this.${arg.getName()?uncap_first} = ${arg.getName()?uncap_first};
        </#list>
        this.size = size;
        this.channel = channel;
        this.stream = new SeekableByteChannelInputStream(channel);
    }

    public ${name}(${javaHelper.constructorArgs(requiredArguments, false, true)}${javaHelper.constructorArgs(optionalArguments, false, true)}final long size, final SeekableByteChannel channel) {
        <#list requiredArguments as arg>
        this.${arg.getName()?uncap_first} = ${arg.getName()?uncap_first};
        </#list>
        <#list optionalArguments as arg>
        this.${arg.getName()?uncap_first} = ${arg.getName()?uncap_first};
        </#list>
        this.size = size;
        this.channel = channel;
        this.stream = new SeekableByteChannelInputStream(channel);

        <#list optionalArguments as arg>
        ${javaHelper.putQueryParamLine(arg)}
        </#list>
    }

    <#include "with_constructors.tmpl"/>

    public PutObjectRequest withChecksum(final Checksum checksum) {
        this.checksum = checksum;
        return this;
    }

	public PutObjectRequest withMetaData(final String key, final String value) {
		final String modifiedKey;
		if (!key.toLowerCase().startsWith(AMZ_META_HEADER)){
			modifiedKey = AMZ_META_HEADER + key;
		} else {
			modifiedKey = key;
		}
		this.getHeaders().put(modifiedKey, value);
		return this;
	}

    <#include "getters_verb_path.tmpl"/>

    @Override
    public Checksum getChecksum() {
        return this.checksum;
    }

    @Override
    public long getSize() {
        return this.size;
    }

    @Override
    public InputStream getStream() {
        return this.stream;
    }

    <#include "getters.tmpl"/>

    public SeekableByteChannel getChannel() {
        return this.channel;
    }
}